Craft an intuitive and appealing UI with very high quality of user experience for a school's student union election:
Target Users & Roles
1. Student Voter
Authenticates using official college credentials
Views active elections for which they are eligible
Casts a single, anonymous vote for chosen candidate(s)
Receives confirmation of vote submission
Can view public real-time results of ongoing elections
2. Election Administrator
Authenticates with dedicated administrative privileges
Manages complete lifecycle of elections
Configures positions, candidates, voter lists, and timing
Accesses detailed, final election reports post-closure
Can access audit logs
3. General Public
Can access dedicated public section of the portal
Views real-time results of ongoing elections
No login required for public viewing
Functional Requirements
System shall enforce role-based access control (RBAC) to restrict functionalities based on user roles.
Election Management (Admin)
Admins can create new elections with title, description, positions, start/end dates.
FR2.1:
Admins can create new elections with title, description, positions, start/end dates.
FR2.2:
For each position, admins can add, edit, and remove candidates with names, bios, and photos.
FR2.3:
Admins define voter eligibility and manage eligible student identifier lists.
FR2.4:
Admins have overview of all elections with status display.
FR2.5:
Admins can manually initiate or terminate voting periods with audit logging.
FR2.6:
Upon conclusion, admins access comprehensive final results and export capabilities.
Voting Process (Student)
FR3.1-3.7:
Complete voting workflow including election listing, candidate selection, vote confirmation, duplicate prevention, and time window enforcement.
Public Real-Time Results Display
FR4.1-4.5:
Public page with real-time results updating within 2-5 seconds, no authentication required, with acknowledged potential voter influence.
Anonymity & Audit Trails
FR5.1:
System records voting status while maintaining vote choice anonymity.
FR5.2:
All critical administrative actions logged with timestamps and user details.

The UI and UX should be that a result of an experienced UI/UX professional with more than 50 years of experience. Craft a well standard industry best practice code, I am using Reactjs and TailwindCSS only




===========For firebase and v0.dev that were giving me response using Nextjs, and typescript===============
I want to have another version of the project. But this time around using Reactjs and TailwindCSS only. The requirement is to have the project written on Reactjs and TailwindCSS only. And make it better and more user friendly and intuitive. It should be a project that has a great user interface and user experience that will wow the users